{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Kiwi",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
        {
            "include": "#builtin-methods"
        },
		{
			"include": "#number"
		},
		{
			"include": "#octal"
		},
		{
			"include": "#binary"
		},
		{
			"include": "#hexadecimal"
		},
        {
            "include": "#operators"
        }
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.number-sign.kiwi",
					"match": "#.*"
				},
				{
					"name": "comment.block.double-number-sign.kiwi",
					"begin": "/#",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.begin.kiwi"
						}
					},
					"end": "#/",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.comment.end.kiwi"
						}
					},
					"patterns": [
						{
							"match": ".+?",
							"name": "comment.content.kiwi"
						}
					]
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.kiwi",
					"begin": "\"",
					"end": "\"",
					"captures": {
						"0": {
							"name": "punctuation.definition.string.begin.kiwi"
						},
						"1": {
							"name": "punctuation.definition.string.end.kiwi"
						},
						"2": {
							"name": "string.quoted.double.kiwi"
						}
					},
					"patterns": [
						{
							"name": "constant.character.escape.kiwi",
							"match": "\\\\(?:[nrt\"\\\\]|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
						}
					]
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.special.this.kiwi",
					"match": "(?<=\\s|^)@(?=\\s|$)"
				},
				{
					"name": "variable.instance.kiwi",
					"match": "@[a-zA-Z_][a-zA-Z0-9_]*"
				},
				{
					"name": "keyword.control.kiwi",
					"match": "\\b(abstract|as|async|await|break|catch|class|def|delete|do|else|elsif|end|export|false|for|fn|go|if|import|in|input|new|next|override|package|parse|pass|print|println|private|return|static|then|this|throw|true|try|when|while|with)\\b"
				},
				{
					"name": "constant.language.boolean.kiwi",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.language.null.kiwi",
					"match": "\\bnull\\b"
				},
				{
					"name": "variable.other.kiwi",
					"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
				},
				{
					"name": "storage.type.kiwi",
					"match": "\\b(Integer|Double|Boolean|String|List|Hash|Object|Lambda)\\b"
				}
			]
		},
		"builtin-methods": {
            "patterns": [
                {
                    "name": "keyword.function.kiwi",
                    "match": "\\b(begins_with|chars|clear|clone|concat|contains|count|dequeue|deserialize|downcase|each|empty|ends_with|enqueue|find|flatten|has_key|index|index|insert|is_a|join|keys|lastindex|lastindex|ltrim|map|match|matches|matches_all|max|merge|min|pop|pretty|push|reduce|remove|remove_at|replace|reverse|rotate|rtrim|scan|select|serialize|shift|size|slice|sort|split|substring|sum|to_bytes|to_double|to_hash|to_hex|to_int|to_string|trim|type|unique|unshift|upcase|values|zip)\\b"
				}
            ]
        },
		"number": {
			"name": "constant.numeric.kiwi",
			"match": "\\b-?(0|[1-9]\\d*)(\\.\\d+)?([eE][+-]?\\d+)?\\b"
		},
        "octal": {
            "name": "constant.numeric.octal.kiwi",
            "match": "\\b0o[0-7]+\\b"
        },
        "binary": {
            "name": "constant.numeric.binary.kiwi",
            "match": "\\b0b[01]+\\b"
        },
		"hexadecimal": {
			"name": "constant.numeric.hexadecimal.kiwi",
			"match": "\\b0x[0-9a-fA-F]+\\b"
		},
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.kiwi",
                    "match": "\\+|-|\\*|\\/|=|==|!=|<|>|<=|>=|&|\\||\\^|~|<<|>>|&&|\\|\\||!|\\+=|-=|\\*=|\\/=|&=|\\|=|\\^=|~=|<<=|>>=|&&=|\\|\\|=|\\?|:|::|\\.\\."
                }
            ]
        }
	},
	"scopeName": "source.kiwi"
}